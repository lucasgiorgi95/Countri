{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountry, borrarEstado, cargarActividad, getActivity, postActivity } from '../Redux/action';\nimport { useHistory, Link } from 'react-router-dom';\n\nconst CreateActivity = () => {// const history = useHistory();\n  // const dispatch = useDispatch();\n  // React.useEffect( () => {\n  //   dispatch(borrarEstado());\n  //    dispatch(getCountry());\n  // }, []);\n  // const actRedux = useSelector((state) => state.mensaje);\n  // const paises = [{\n  //   id:1,\n  //   name:\"Argentina\",\n  //   capital:\"Bs.As\",\n  //   continent:\"Sur America\"\n  // },\n  // {\n  //   id:2,\n  //   name:\"Italia\",\n  //   capital:\"Roma\",\n  //   continent:\"Europa\"\n  // },\n  // {\n  //   id:3,\n  //   name:\"Japon\",\n  //   capital:\"Tokyo\",\n  //   continent:\"Aisa\"\n  // }]\n  // const [error, setError] = useState({nombre: \"\",duracion: \"\",todos:\"\"});\n  // const [actividad, setActividad] = useState({\n  //   nombre: \"\",\n  //   dificultad: 1,\n  //   duracion: \"\",\n  //   temporada: \"\",\n  //   paises: [],\n  // });\n  // const [lista, setLista] = useState([]);\n  // function handleChange(e) {\n  //   let { name, value} = e.target;\n  //   if (name === \"nombre\") {\n  //     value = value.toUpperCase();\n  //     !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length <3 ?\n  //       setError({ ...error, nombre:\"Solo se permiten letras, mínimo tres caracteres\" }):\n  //       setError({ ...error, nombre: \"\" });\n  //   }\n  //    if(name === \"duracion\") {\n  //     !/^[0-9]+$/g.test(value) || value >100 ?\n  //       setError({ ...error, duracion:\"Solo se permiten numeros hasta 100\" }):\n  //       setError({ ...error, duracion: \"\" });   \n  //   }\n  //    if (e.target.selected) {\n  //     if (!lista.includes(e.target.text)) {\n  //       console.log(lista);\n  //       setLista([...lista, e.target.text]);\n  //      return setActividad({ ...actividad, paises: [...actividad.paises,value] });\n  //     }   \n  //   }\n  //   setActividad({ ...actividad, [name]: value });\n  //  if(error.todos !== \"\"){\n  //   setError({...error,todos:\"\"})\n  //  }\n  // }\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   if (\n  //     actividad.nombre === \"\" ||\n  //     actividad.dificultad === \"\" ||\n  //     actividad.duracion === \"\" ||\n  //     actividad.temporada === \"\" ||\n  //     actividad.paises.length === 0 ||\n  //     error.nombre != \"\" ||\n  //     error.duracion !=\"\"\n  //   ) {\n  //     console.log(\"no se carga \"+ actividad.paises.length);\n  //  setError({...error, todos:\"Todos los campos son obligatorios\"});\n  //   } else {\n  //     setError({ nombre: \"\", duracion: \"\",todos: \"\"});\n  //     setActividad({...actividad, dificultad:  parseInt(actividad.dificultad)}) \n  //     setActividad({...actividad, duracion: parseInt(actividad.duracion)});\n  //     dispatch(cargarActividad(actividad));\n  //     //-------------------------------------BORRAR --------------------------------------------\n  //     setActividad({nombre: \"\",dificultad: 1,duracion: \"\",temporada: \"\",paises: []});\n  //     setLista([]); \n  //     document.querySelector(\"#formulario\").reset();\n  //   } \n  //   // history.push(\"/home\");\n  //   return\n  // }\n  // function borrarPais(e) {\n  //    setLista(lista.filter((pais) => pais !== e.target.value));\n  //     let result = paises.find((pais) => pais.name === e.target.value);\n  //     setActividad({ ...actividad, paises: actividad.paises.filter((pais) => pais !== result.id) });\n  // }\n  // return (\n  //   <>\n  //   <div >\n  //     <form  onSubmit={handleSubmit} id=\"formulario\">\n  //       <h1 >Load an Activity</h1>\n  //       {error.todos !==\"\" && <span >{error.todos}</span>}\n  //       <input   type=\"text\" name=\"nombre\"  value={actividad.nombre}\n  //         placeholder=\"Activity Name\" onChange={handleChange}/>\n  //       {error.nombre && <span >{error.nombre}</span>}\n  //       <div >\n  //         <label htmlFor=\"dificultad\">Difficulty: {actividad.dificultad}</label>\n  //         <input name=\"dificultad\"  type=\"range\" min=\"1\"\n  //           max=\"5\" value={actividad.dificultad} step=\"1\" onChange={handleChange} />\n  //       </div>\n  //         <input  name=\"duracion\" type=\"text\" value={actividad.duracion} onChange={handleChange} \n  //         placeholder =\"Duration (days)\"/>\n  //       {error.duracion && <span >{error.duracion}</span>}\n  //       <div >\n  //         <label htmlFor=\"\">Season</label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Verano\" onClick={handleChange}/>{\" \"}\n  //           Summer\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Otoño\" onClick={handleChange}/>{\" \"}\n  //           Autumn\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Invierno\" onClick={handleChange}/>{\" \"}\n  //           Winter\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Primavera\" onClick={handleChange}/>{\" \"}\n  //           Spring\n  //         </label>\n  //       </div>\n  //         <select name=\"select\" id=\"paises\"  >\n  //           <option value=\"value\">Choose a Country</option>\n  //           {paises.map((pais) => (\n  //             <option key={pais.id} value={pais.id} onClick={handleChange}>\n  //               {pais.name}\n  //             </option>\n  //           ))}\n  //         </select>\n  //       <div>\n  //         {lista.map((data) => (\n  //           <button   key={data} value={data}  onClick={borrarPais}>{data} </button>\n  //         ))}\n  //       </div>\n  //         <input  type=\"submit\" name={\"boton\"} value=\"Load Activity\" />\n  //     </form>\n  //     <div >\n  //     {actRedux && <span >{actRedux}</span>}\n  //       <Link to=\"/home\" > <button  >Retrun</button></Link>\n  //     </div>\n  //   </div>\n  //   </>\n  // );\n  //   function valida(input) {\n  //     let errors = {}\n  //     if (!input.name) {\n  //         errors.name = \"Name required\"\n  //     }\n  //     return errors;\n  // }\n  // function CreateActivity() {\n  //     const dispatch = useDispatch()\n  //     const history = useHistory()\n  //     const countries = useSelector(state => state.country).sort((a, b) => {\n  //         if(a.name < b.name){\n  //             return -1;\n  //         }\n  //         if(a.name > b.name){\n  //             return 1;\n  //         }\n  //         return 0;\n  //     })\n  //     const [errors, setErrors] = useState({})\n  //     const [input, setInput] = useState({\n  //         name: '',\n  //         difficulty: '',\n  //         duration: '',\n  //         season: '',\n  //         countries: []\n  //     })\n  //     useEffect(() => {\n  //         dispatch(getCountry())\n  //     }, [dispatch])\n  //     useEffect(() => {\n  //         dispatch(getActivity())\n  //     }, [dispatch])\n  //     function handleChange(e) {\n  //         setInput({\n  //             ...input,\n  //             [e.target.name]: e.target.value\n  //         })\n  //         setErrors(valida({\n  //             ...input,\n  //             [e.target.name]: e.target.value\n  //         }))\n  //     }\n  //     function handleSelect(id) {\n  //         setInput({\n  //             ...input,\n  //             countries: [...input.countries, id.target.value]\n  //         })\n  //     }\n  //     function handleSeason(e) {\n  //         setInput({\n  //             ...input,\n  //             season: e.target.value\n  //         })\n  //     }\n  //     function handleSelctDifficulty(e) {\n  //         setInput({\n  //             ...input,\n  //             difficulty: e.target.value\n  //         })\n  //     }\n  //     function handleSelectDuration(e) {\n  //         setInput({\n  //             ...input,\n  //             duration: e.target.value\n  //         })\n  //     }\n  //     function handleDelete(e) {\n  //         setInput({\n  //             ...input,\n  //             countries: input.countries.filter(c => c !== e)\n  //         })\n  //     }\n  //     function handleSubmit(e) {\n  //         e.preventDefault();\n  //         dispatch(postActivity(input))\n  //        /*  alert('enviado') */\n  //         setInput({\n  //             name: '',\n  //             difficulty: '',\n  //             duration: '',\n  //             season: '',\n  //             countries: []\n  //         })\n  //         alert('creado')\n  //         history.push('/home')\n  //     }\n  //     const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n  //     const difficulty = [1, 2, 3, 4, 5];\n  //     const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n  //     return (\n  //         <div >\n  //             <div >\n  //                 <div>\n  //                     <h2>Add Activity</h2>\n  //                     <div>\n  //                         <form onSubmit={(e)=>handleSubmit(e)}>\n  //                             <div >\n  //                                 <label>Activity: </label>\n  //                                 <input type=\"text\" value={input.name} name=\"name\" onChange={handleChange} placeholder=\"Activity name...\" required />\n  //                                 {errors.name && (\n  //                                     <p >{errors.name}</p>\n  //                                 )}\n  //                             </div>\n  //                             <div >\n  //                                 <label>Season: </label>\n  //                                 <select onChange={(e)=>handleSeason(e)} required>\n  //                                     <option value=\"\" hidden>Select season</option>\n  //                                     {season.map(e => (\n  //                                         <option value={e} name=\"season\" key={e} >{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Difficulty: </label>\n  //                                 <select onChange={(e)=>handleSelctDifficulty(e)} required >\n  //                                     <option value=\"\" hidden>Choose an option</option>\n  //                                     {difficulty.map(e => (\n  //                                         <option value={e} name=\"difficulty\">{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Duration: </label>\n  //                                 <select onChange={(e)=>handleSelectDuration(e)} required>\n  //                                     <option value=\"\" hidden>Choose an option</option>\n  //                                     {duration.map(e => (\n  //                                         <option value={e} name=\"duration\">{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Country: </label>\n  //                                 <select onChange={(e)=>handleSelect(e)} required>\n  //                                     <option value=\"\" hidden>Select country</option>\n  //                                     {countries.map(e => (\n  //                                         <option value={e.id} name=\"countries\" key={e.id} >{e.name}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div>\n  //                                 <ul>\n  //                                     <li >{input.countries.map(i =>\n  //                                         <div>\n  //                                             {i}\n  //                                             <button onClick={() => handleDelete(i)} type=\"button\">X</button>\n  //                                         </div>)}</li>\n  //                                 </ul>\n  //                             </div>\n  //                             <button type=\"submit\">Add Activity</button>\n  //                         </form>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )\n};\n\n_c = CreateActivity;\nexport default CreateActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateActivity\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getCountry","borrarEstado","cargarActividad","getActivity","postActivity","useHistory","Link","CreateActivity"],"sources":["/home/lucasgiorgi/Escritorio/Henry/PI/PI-Countries-main/client/src/Components/CreateActivity.jsx"],"sourcesContent":["import React, {useState, useEffect}from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { getCountry, borrarEstado,cargarActividad, getActivity, postActivity} from '../Redux/action'\nimport {useHistory, Link} from 'react-router-dom'\n\nconst CreateActivity = () => {\n  // const history = useHistory();\n\n  // const dispatch = useDispatch();\n  // React.useEffect( () => {\n  //   dispatch(borrarEstado());\n  //    dispatch(getCountry());\n  // }, []);\n  // const actRedux = useSelector((state) => state.mensaje);\n  // const paises = [{\n  //   id:1,\n  //   name:\"Argentina\",\n  //   capital:\"Bs.As\",\n  //   continent:\"Sur America\"\n  // },\n  // {\n  //   id:2,\n  //   name:\"Italia\",\n  //   capital:\"Roma\",\n  //   continent:\"Europa\"\n  // },\n  // {\n  //   id:3,\n  //   name:\"Japon\",\n  //   capital:\"Tokyo\",\n  //   continent:\"Aisa\"\n  // }]\n  // const [error, setError] = useState({nombre: \"\",duracion: \"\",todos:\"\"});\n  // const [actividad, setActividad] = useState({\n  //   nombre: \"\",\n  //   dificultad: 1,\n  //   duracion: \"\",\n  //   temporada: \"\",\n  //   paises: [],\n  // });\n  // const [lista, setLista] = useState([]);\n  \n\n  // function handleChange(e) {\n\n  //   let { name, value} = e.target;\n  //   if (name === \"nombre\") {\n  //     value = value.toUpperCase();\n  //     !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length <3 ?\n  //       setError({ ...error, nombre:\"Solo se permiten letras, mínimo tres caracteres\" }):\n  //       setError({ ...error, nombre: \"\" });\n  //   }\n  //    if(name === \"duracion\") {\n  //     !/^[0-9]+$/g.test(value) || value >100 ?\n  //       setError({ ...error, duracion:\"Solo se permiten numeros hasta 100\" }):\n  //       setError({ ...error, duracion: \"\" });   \n  //   }\n  //    if (e.target.selected) {\n       \n  //     if (!lista.includes(e.target.text)) {\n  //       console.log(lista);\n  //       setLista([...lista, e.target.text]);\n  //      return setActividad({ ...actividad, paises: [...actividad.paises,value] });\n  //     }   \n  //   }\n  //   setActividad({ ...actividad, [name]: value });\n  //  if(error.todos !== \"\"){\n  //   setError({...error,todos:\"\"})\n  //  }\n  // }\n  \n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  \n  //   if (\n  //     actividad.nombre === \"\" ||\n  //     actividad.dificultad === \"\" ||\n  //     actividad.duracion === \"\" ||\n  //     actividad.temporada === \"\" ||\n  //     actividad.paises.length === 0 ||\n  //     error.nombre != \"\" ||\n  //     error.duracion !=\"\"\n  //   ) {\n  //     console.log(\"no se carga \"+ actividad.paises.length);\n  //  setError({...error, todos:\"Todos los campos son obligatorios\"});\n  \n\n  //   } else {\n  //     setError({ nombre: \"\", duracion: \"\",todos: \"\"});\n  //     setActividad({...actividad, dificultad:  parseInt(actividad.dificultad)}) \n  //     setActividad({...actividad, duracion: parseInt(actividad.duracion)});\n  //     dispatch(cargarActividad(actividad));\n  //     //-------------------------------------BORRAR --------------------------------------------\n  //     setActividad({nombre: \"\",dificultad: 1,duracion: \"\",temporada: \"\",paises: []});\n  //     setLista([]); \n  //     document.querySelector(\"#formulario\").reset();\n  //   } \n  //   // history.push(\"/home\");\n  //   return\n  // }\n\n  // function borrarPais(e) {\n  //    setLista(lista.filter((pais) => pais !== e.target.value));\n  //     let result = paises.find((pais) => pais.name === e.target.value);\n  //     setActividad({ ...actividad, paises: actividad.paises.filter((pais) => pais !== result.id) });\n  // }\n\n  // return (\n  //   <>\n  //   <div >\n  //     <form  onSubmit={handleSubmit} id=\"formulario\">\n\n  //       <h1 >Load an Activity</h1>\n  //       {error.todos !==\"\" && <span >{error.todos}</span>}\n      \n  //       <input   type=\"text\" name=\"nombre\"  value={actividad.nombre}\n  //         placeholder=\"Activity Name\" onChange={handleChange}/>\n        \n  //       {error.nombre && <span >{error.nombre}</span>}\n  //       <div >\n  //         <label htmlFor=\"dificultad\">Difficulty: {actividad.dificultad}</label>\n  //         <input name=\"dificultad\"  type=\"range\" min=\"1\"\n  //           max=\"5\" value={actividad.dificultad} step=\"1\" onChange={handleChange} />\n  //       </div>\n        \n  //         <input  name=\"duracion\" type=\"text\" value={actividad.duracion} onChange={handleChange} \n  //         placeholder =\"Duration (days)\"/>\n      \n  //       {error.duracion && <span >{error.duracion}</span>}\n  //       <div >\n  //         <label htmlFor=\"\">Season</label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Verano\" onClick={handleChange}/>{\" \"}\n  //           Summer\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Otoño\" onClick={handleChange}/>{\" \"}\n  //           Autumn\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Invierno\" onClick={handleChange}/>{\" \"}\n  //           Winter\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Primavera\" onClick={handleChange}/>{\" \"}\n  //           Spring\n  //         </label>\n  //       </div>\n      \n  //         <select name=\"select\" id=\"paises\"  >\n  //           <option value=\"value\">Choose a Country</option>\n  //           {paises.map((pais) => (\n  //             <option key={pais.id} value={pais.id} onClick={handleChange}>\n  //               {pais.name}\n  //             </option>\n  //           ))}\n  //         </select>\n         \n  //       <div>\n  //         {lista.map((data) => (\n  //           <button   key={data} value={data}  onClick={borrarPais}>{data} </button>\n  //         ))}\n  //       </div>\n  //         <input  type=\"submit\" name={\"boton\"} value=\"Load Activity\" />\n  //     </form>\n      \n  //     <div >\n  //     {actRedux && <span >{actRedux}</span>}\n  //       <Link to=\"/home\" > <button  >Retrun</button></Link>\n  //     </div>\n  //   </div>\n  //   </>\n  // );\n\n\n//   function valida(input) {\n//     let errors = {}\n//     if (!input.name) {\n//         errors.name = \"Name required\"\n//     }\n//     return errors;\n// }\n\n// function CreateActivity() {\n//     const dispatch = useDispatch()\n//     const history = useHistory()\n//     const countries = useSelector(state => state.country).sort((a, b) => {\n//         if(a.name < b.name){\n//             return -1;\n//         }\n//         if(a.name > b.name){\n//             return 1;\n//         }\n//         return 0;\n//     })\n\n//     const [errors, setErrors] = useState({})\n\n//     const [input, setInput] = useState({\n//         name: '',\n//         difficulty: '',\n//         duration: '',\n//         season: '',\n//         countries: []\n//     })\n\n//     useEffect(() => {\n//         dispatch(getCountry())\n//     }, [dispatch])\n\n//     useEffect(() => {\n//         dispatch(getActivity())\n//     }, [dispatch])\n\n//     function handleChange(e) {\n//         setInput({\n//             ...input,\n//             [e.target.name]: e.target.value\n//         })\n//         setErrors(valida({\n//             ...input,\n//             [e.target.name]: e.target.value\n//         }))\n//     }\n\n//     function handleSelect(id) {\n//         setInput({\n//             ...input,\n//             countries: [...input.countries, id.target.value]\n//         })\n//     }\n\n//     function handleSeason(e) {\n//         setInput({\n//             ...input,\n//             season: e.target.value\n//         })\n//     }\n\n//     function handleSelctDifficulty(e) {\n//         setInput({\n//             ...input,\n//             difficulty: e.target.value\n//         })\n//     }\n\n//     function handleSelectDuration(e) {\n//         setInput({\n//             ...input,\n//             duration: e.target.value\n//         })\n//     }\n\n//     function handleDelete(e) {\n//         setInput({\n//             ...input,\n//             countries: input.countries.filter(c => c !== e)\n//         })\n//     }\n\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         dispatch(postActivity(input))\n\n//        /*  alert('enviado') */\n//         setInput({\n//             name: '',\n//             difficulty: '',\n//             duration: '',\n//             season: '',\n//             countries: []\n//         })\n//         alert('creado')\n//         history.push('/home')\n     \n//     }\n\n//     const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n//     const difficulty = [1, 2, 3, 4, 5];\n//     const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n\n//     return (\n//         <div >\n//             <div >\n//                 <div>\n//                     <h2>Add Activity</h2>\n//                     <div>\n//                         <form onSubmit={(e)=>handleSubmit(e)}>\n//                             <div >\n//                                 <label>Activity: </label>\n//                                 <input type=\"text\" value={input.name} name=\"name\" onChange={handleChange} placeholder=\"Activity name...\" required />\n//                                 {errors.name && (\n//                                     <p >{errors.name}</p>\n//                                 )}\n//                             </div>\n//                             <div >\n//                                 <label>Season: </label>\n//                                 <select onChange={(e)=>handleSeason(e)} required>\n//                                     <option value=\"\" hidden>Select season</option>\n//                                     {season.map(e => (\n//                                         <option value={e} name=\"season\" key={e} >{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Difficulty: </label>\n//                                 <select onChange={(e)=>handleSelctDifficulty(e)} required >\n//                                     <option value=\"\" hidden>Choose an option</option>\n//                                     {difficulty.map(e => (\n//                                         <option value={e} name=\"difficulty\">{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Duration: </label>\n//                                 <select onChange={(e)=>handleSelectDuration(e)} required>\n//                                     <option value=\"\" hidden>Choose an option</option>\n//                                     {duration.map(e => (\n//                                         <option value={e} name=\"duration\">{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Country: </label>\n//                                 <select onChange={(e)=>handleSelect(e)} required>\n//                                     <option value=\"\" hidden>Select country</option>\n//                                     {countries.map(e => (\n//                                         <option value={e.id} name=\"countries\" key={e.id} >{e.name}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div>\n//                                 <ul>\n//                                     <li >{input.countries.map(i =>\n//                                         <div>\n//                                             {i}\n//                                             <button onClick={() => handleDelete(i)} type=\"button\">X</button>\n//                                         </div>)}</li>\n//                                 </ul>\n//                             </div>\n//                             <button type=\"submit\">Add Activity</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n}\n\nexport default CreateActivity"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAkCC,eAAlC,EAAmDC,WAAnD,EAAgEC,YAAhE,QAAmF,iBAAnF;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;;AAEA,MAAMC,cAAc,GAAG,MAAM,CAC3B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC,CAtVD;;KAAMA,c;AAwVN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}