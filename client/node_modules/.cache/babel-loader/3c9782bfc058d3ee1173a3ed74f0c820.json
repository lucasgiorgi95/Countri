{"ast":null,"code":"var _jsxFileName = \"/home/lucasgiorgi/Escritorio/Henry/PI/PI-Countries-main/client/src/Components/CreateActivity.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountry, borrarEstado, cargarActividad, getActivity, postActivity } from '../Redux/action';\nimport { useHistory, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateActivity = () => {\n  var _s = $RefreshSig$();\n\n  // const history = useHistory();\n  // const dispatch = useDispatch();\n  // React.useEffect( () => {\n  //   dispatch(borrarEstado());\n  //    dispatch(getCountry());\n  // }, []);\n  // const actRedux = useSelector((state) => state.mensaje);\n  // const paises = [{\n  //   id:1,\n  //   name:\"Argentina\",\n  //   capital:\"Bs.As\",\n  //   continent:\"Sur America\"\n  // },\n  // {\n  //   id:2,\n  //   name:\"Italia\",\n  //   capital:\"Roma\",\n  //   continent:\"Europa\"\n  // },\n  // {\n  //   id:3,\n  //   name:\"Japon\",\n  //   capital:\"Tokyo\",\n  //   continent:\"Aisa\"\n  // }]\n  // const [error, setError] = useState({nombre: \"\",duracion: \"\",todos:\"\"});\n  // const [actividad, setActividad] = useState({\n  //   nombre: \"\",\n  //   dificultad: 1,\n  //   duracion: \"\",\n  //   temporada: \"\",\n  //   paises: [],\n  // });\n  // const [lista, setLista] = useState([]);\n  // function handleChange(e) {\n  //   let { name, value} = e.target;\n  //   if (name === \"nombre\") {\n  //     value = value.toUpperCase();\n  //     !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length <3 ?\n  //       setError({ ...error, nombre:\"Solo se permiten letras, mínimo tres caracteres\" }):\n  //       setError({ ...error, nombre: \"\" });\n  //   }\n  //    if(name === \"duracion\") {\n  //     !/^[0-9]+$/g.test(value) || value >100 ?\n  //       setError({ ...error, duracion:\"Solo se permiten numeros hasta 100\" }):\n  //       setError({ ...error, duracion: \"\" });   \n  //   }\n  //    if (e.target.selected) {\n  //     if (!lista.includes(e.target.text)) {\n  //       console.log(lista);\n  //       setLista([...lista, e.target.text]);\n  //      return setActividad({ ...actividad, paises: [...actividad.paises,value] });\n  //     }   \n  //   }\n  //   setActividad({ ...actividad, [name]: value });\n  //  if(error.todos !== \"\"){\n  //   setError({...error,todos:\"\"})\n  //  }\n  // }\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   if (\n  //     actividad.nombre === \"\" ||\n  //     actividad.dificultad === \"\" ||\n  //     actividad.duracion === \"\" ||\n  //     actividad.temporada === \"\" ||\n  //     actividad.paises.length === 0 ||\n  //     error.nombre != \"\" ||\n  //     error.duracion !=\"\"\n  //   ) {\n  //     console.log(\"no se carga \"+ actividad.paises.length);\n  //  setError({...error, todos:\"Todos los campos son obligatorios\"});\n  //   } else {\n  //     setError({ nombre: \"\", duracion: \"\",todos: \"\"});\n  //     setActividad({...actividad, dificultad:  parseInt(actividad.dificultad)}) \n  //     setActividad({...actividad, duracion: parseInt(actividad.duracion)});\n  //     dispatch(cargarActividad(actividad));\n  //     //-------------------------------------BORRAR --------------------------------------------\n  //     setActividad({nombre: \"\",dificultad: 1,duracion: \"\",temporada: \"\",paises: []});\n  //     setLista([]); \n  //     document.querySelector(\"#formulario\").reset();\n  //   } \n  //   // history.push(\"/home\");\n  //   return\n  // }\n  // function borrarPais(e) {\n  //    setLista(lista.filter((pais) => pais !== e.target.value));\n  //     let result = paises.find((pais) => pais.name === e.target.value);\n  //     setActividad({ ...actividad, paises: actividad.paises.filter((pais) => pais !== result.id) });\n  // }\n  // return (\n  //   <>\n  //   <div >\n  //     <form  onSubmit={handleSubmit} id=\"formulario\">\n  //       <h1 >Load an Activity</h1>\n  //       {error.todos !==\"\" && <span >{error.todos}</span>}\n  //       <input   type=\"text\" name=\"nombre\"  value={actividad.nombre}\n  //         placeholder=\"Activity Name\" onChange={handleChange}/>\n  //       {error.nombre && <span >{error.nombre}</span>}\n  //       <div >\n  //         <label htmlFor=\"dificultad\">Difficulty: {actividad.dificultad}</label>\n  //         <input name=\"dificultad\"  type=\"range\" min=\"1\"\n  //           max=\"5\" value={actividad.dificultad} step=\"1\" onChange={handleChange} />\n  //       </div>\n  //         <input  name=\"duracion\" type=\"text\" value={actividad.duracion} onChange={handleChange} \n  //         placeholder =\"Duration (days)\"/>\n  //       {error.duracion && <span >{error.duracion}</span>}\n  //       <div >\n  //         <label htmlFor=\"\">Season</label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Verano\" onClick={handleChange}/>{\" \"}\n  //           Summer\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Otoño\" onClick={handleChange}/>{\" \"}\n  //           Autumn\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Invierno\" onClick={handleChange}/>{\" \"}\n  //           Winter\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Primavera\" onClick={handleChange}/>{\" \"}\n  //           Spring\n  //         </label>\n  //       </div>\n  //         <select name=\"select\" id=\"paises\"  >\n  //           <option value=\"value\">Choose a Country</option>\n  //           {paises.map((pais) => (\n  //             <option key={pais.id} value={pais.id} onClick={handleChange}>\n  //               {pais.name}\n  //             </option>\n  //           ))}\n  //         </select>\n  //       <div>\n  //         {lista.map((data) => (\n  //           <button   key={data} value={data}  onClick={borrarPais}>{data} </button>\n  //         ))}\n  //       </div>\n  //         <input  type=\"submit\" name={\"boton\"} value=\"Load Activity\" />\n  //     </form>\n  //     <div >\n  //     {actRedux && <span >{actRedux}</span>}\n  //       <Link to=\"/home\" > <button  >Retrun</button></Link>\n  //     </div>\n  //   </div>\n  //   </>\n  // );\n  function valida(input) {\n    let errors = {};\n\n    if (!input.name) {\n      errors.name = \"Name required\";\n    }\n\n    return errors;\n  }\n\n  function CreateActivity() {\n    _s();\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const countries = useSelector(state => state.country).sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n\n      if (a.name > b.name) {\n        return 1;\n      }\n\n      return 0;\n    });\n    const [errors, setErrors] = useState({});\n    const [input, setInput] = useState({\n      name: '',\n      difficulty: '',\n      duration: '',\n      season: '',\n      countries: []\n    });\n    useEffect(() => {\n      dispatch(getCountry());\n    }, [dispatch]);\n    useEffect(() => {\n      dispatch(getActivity());\n    }, [dispatch]);\n\n    function handleChange(e) {\n      setInput({ ...input,\n        [e.target.name]: e.target.value\n      });\n      setErrors(valida({ ...input,\n        [e.target.name]: e.target.value\n      }));\n    }\n\n    function handleSelect(id) {\n      setInput({ ...input,\n        countries: [...input.countries, id.target.value]\n      });\n    }\n\n    function handleSeason(e) {\n      setInput({ ...input,\n        season: e.target.value\n      });\n    }\n\n    function handleSelctDifficulty(e) {\n      setInput({ ...input,\n        difficulty: e.target.value\n      });\n    }\n\n    function handleSelectDuration(e) {\n      setInput({ ...input,\n        duration: e.target.value\n      });\n    }\n\n    function handleDelete(e) {\n      setInput({ ...input,\n        countries: input.countries.filter(c => c !== e)\n      });\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      dispatch(postActivity(input));\n      /*  alert('enviado') */\n\n      setInput({\n        name: '',\n        difficulty: '',\n        duration: '',\n        season: '',\n        countries: []\n      });\n      alert('creado');\n      history.push('/home');\n    }\n\n    const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n    const difficulty = [1, 2, 3, 4, 5];\n    const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleSubmit(e),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Activity: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: input.name,\n                  name: \"name\",\n                  onChange: handleChange,\n                  placeholder: \"Activity name...\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Season: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => handleSeason(e),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    hidden: true,\n                    children: \"Select season\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 37\n                  }, this), season.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: e,\n                    name: \"season\",\n                    children: e\n                  }, e, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Difficulty: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => handleSelctDifficulty(e),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    hidden: true,\n                    children: \"Choose an option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 37\n                  }, this), difficulty.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: e,\n                    name: \"difficulty\",\n                    children: e\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Duration: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => handleSelectDuration(e),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    hidden: true,\n                    children: \"Choose an option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 37\n                  }, this), duration.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: e,\n                    name: \"duration\",\n                    children: e\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Country: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => handleSelect(e),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    hidden: true,\n                    children: \"Select country\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 37\n                  }, this), countries.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: e.id,\n                    name: \"countries\",\n                    children: e.name\n                  }, e.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: input.countries.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [i, /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDelete(i),\n                        type: \"button\",\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 41\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Add Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this);\n  }\n\n  _s(CreateActivity, \"Nic1Th6xLUPnytwfKg9+EJRQCrA=\", false, function () {\n    return [useDispatch, useHistory, useSelector];\n  });\n};\n\n_c = CreateActivity;\nexport default CreateActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateActivity\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getCountry","borrarEstado","cargarActividad","getActivity","postActivity","useHistory","Link","CreateActivity","valida","input","errors","name","dispatch","history","countries","state","country","sort","a","b","setErrors","setInput","difficulty","duration","season","handleChange","e","target","value","handleSelect","id","handleSeason","handleSelctDifficulty","handleSelectDuration","handleDelete","filter","c","handleSubmit","preventDefault","alert","push","map","i"],"sources":["/home/lucasgiorgi/Escritorio/Henry/PI/PI-Countries-main/client/src/Components/CreateActivity.jsx"],"sourcesContent":["import React, {useState, useEffect}from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { getCountry, borrarEstado,cargarActividad, getActivity, postActivity} from '../Redux/action'\nimport {useHistory, Link} from 'react-router-dom'\n\nconst CreateActivity = () => {\n  // const history = useHistory();\n\n  // const dispatch = useDispatch();\n  // React.useEffect( () => {\n  //   dispatch(borrarEstado());\n  //    dispatch(getCountry());\n  // }, []);\n  // const actRedux = useSelector((state) => state.mensaje);\n  // const paises = [{\n  //   id:1,\n  //   name:\"Argentina\",\n  //   capital:\"Bs.As\",\n  //   continent:\"Sur America\"\n  // },\n  // {\n  //   id:2,\n  //   name:\"Italia\",\n  //   capital:\"Roma\",\n  //   continent:\"Europa\"\n  // },\n  // {\n  //   id:3,\n  //   name:\"Japon\",\n  //   capital:\"Tokyo\",\n  //   continent:\"Aisa\"\n  // }]\n  // const [error, setError] = useState({nombre: \"\",duracion: \"\",todos:\"\"});\n  // const [actividad, setActividad] = useState({\n  //   nombre: \"\",\n  //   dificultad: 1,\n  //   duracion: \"\",\n  //   temporada: \"\",\n  //   paises: [],\n  // });\n  // const [lista, setLista] = useState([]);\n  \n\n  // function handleChange(e) {\n\n  //   let { name, value} = e.target;\n  //   if (name === \"nombre\") {\n  //     value = value.toUpperCase();\n  //     !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length <3 ?\n  //       setError({ ...error, nombre:\"Solo se permiten letras, mínimo tres caracteres\" }):\n  //       setError({ ...error, nombre: \"\" });\n  //   }\n  //    if(name === \"duracion\") {\n  //     !/^[0-9]+$/g.test(value) || value >100 ?\n  //       setError({ ...error, duracion:\"Solo se permiten numeros hasta 100\" }):\n  //       setError({ ...error, duracion: \"\" });   \n  //   }\n  //    if (e.target.selected) {\n       \n  //     if (!lista.includes(e.target.text)) {\n  //       console.log(lista);\n  //       setLista([...lista, e.target.text]);\n  //      return setActividad({ ...actividad, paises: [...actividad.paises,value] });\n  //     }   \n  //   }\n  //   setActividad({ ...actividad, [name]: value });\n  //  if(error.todos !== \"\"){\n  //   setError({...error,todos:\"\"})\n  //  }\n  // }\n  \n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  \n  //   if (\n  //     actividad.nombre === \"\" ||\n  //     actividad.dificultad === \"\" ||\n  //     actividad.duracion === \"\" ||\n  //     actividad.temporada === \"\" ||\n  //     actividad.paises.length === 0 ||\n  //     error.nombre != \"\" ||\n  //     error.duracion !=\"\"\n  //   ) {\n  //     console.log(\"no se carga \"+ actividad.paises.length);\n  //  setError({...error, todos:\"Todos los campos son obligatorios\"});\n  \n\n  //   } else {\n  //     setError({ nombre: \"\", duracion: \"\",todos: \"\"});\n  //     setActividad({...actividad, dificultad:  parseInt(actividad.dificultad)}) \n  //     setActividad({...actividad, duracion: parseInt(actividad.duracion)});\n  //     dispatch(cargarActividad(actividad));\n  //     //-------------------------------------BORRAR --------------------------------------------\n  //     setActividad({nombre: \"\",dificultad: 1,duracion: \"\",temporada: \"\",paises: []});\n  //     setLista([]); \n  //     document.querySelector(\"#formulario\").reset();\n  //   } \n  //   // history.push(\"/home\");\n  //   return\n  // }\n\n  // function borrarPais(e) {\n  //    setLista(lista.filter((pais) => pais !== e.target.value));\n  //     let result = paises.find((pais) => pais.name === e.target.value);\n  //     setActividad({ ...actividad, paises: actividad.paises.filter((pais) => pais !== result.id) });\n  // }\n\n  // return (\n  //   <>\n  //   <div >\n  //     <form  onSubmit={handleSubmit} id=\"formulario\">\n\n  //       <h1 >Load an Activity</h1>\n  //       {error.todos !==\"\" && <span >{error.todos}</span>}\n      \n  //       <input   type=\"text\" name=\"nombre\"  value={actividad.nombre}\n  //         placeholder=\"Activity Name\" onChange={handleChange}/>\n        \n  //       {error.nombre && <span >{error.nombre}</span>}\n  //       <div >\n  //         <label htmlFor=\"dificultad\">Difficulty: {actividad.dificultad}</label>\n  //         <input name=\"dificultad\"  type=\"range\" min=\"1\"\n  //           max=\"5\" value={actividad.dificultad} step=\"1\" onChange={handleChange} />\n  //       </div>\n        \n  //         <input  name=\"duracion\" type=\"text\" value={actividad.duracion} onChange={handleChange} \n  //         placeholder =\"Duration (days)\"/>\n      \n  //       {error.duracion && <span >{error.duracion}</span>}\n  //       <div >\n  //         <label htmlFor=\"\">Season</label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Verano\" onClick={handleChange}/>{\" \"}\n  //           Summer\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Otoño\" onClick={handleChange}/>{\" \"}\n  //           Autumn\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Invierno\" onClick={handleChange}/>{\" \"}\n  //           Winter\n  //         </label>\n  //         <label htmlFor=\"\">\n  //           <input type=\"radio\" name=\"temporada\" value=\"Primavera\" onClick={handleChange}/>{\" \"}\n  //           Spring\n  //         </label>\n  //       </div>\n      \n  //         <select name=\"select\" id=\"paises\"  >\n  //           <option value=\"value\">Choose a Country</option>\n  //           {paises.map((pais) => (\n  //             <option key={pais.id} value={pais.id} onClick={handleChange}>\n  //               {pais.name}\n  //             </option>\n  //           ))}\n  //         </select>\n         \n  //       <div>\n  //         {lista.map((data) => (\n  //           <button   key={data} value={data}  onClick={borrarPais}>{data} </button>\n  //         ))}\n  //       </div>\n  //         <input  type=\"submit\" name={\"boton\"} value=\"Load Activity\" />\n  //     </form>\n      \n  //     <div >\n  //     {actRedux && <span >{actRedux}</span>}\n  //       <Link to=\"/home\" > <button  >Retrun</button></Link>\n  //     </div>\n  //   </div>\n  //   </>\n  // );\n\n\n  function valida(input) {\n    let errors = {}\n    if (!input.name) {\n        errors.name = \"Name required\"\n    }\n    return errors;\n}\n\nfunction CreateActivity() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const countries = useSelector(state => state.country).sort((a, b) => {\n        if(a.name < b.name){\n            return -1;\n        }\n        if(a.name > b.name){\n            return 1;\n        }\n        return 0;\n    })\n\n    const [errors, setErrors] = useState({})\n\n    const [input, setInput] = useState({\n        name: '',\n        difficulty: '',\n        duration: '',\n        season: '',\n        countries: []\n    })\n\n    useEffect(() => {\n        dispatch(getCountry())\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(getActivity())\n    }, [dispatch])\n\n    function handleChange(e) {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value\n        })\n        setErrors(valida({\n            ...input,\n            [e.target.name]: e.target.value\n        }))\n    }\n\n    function handleSelect(id) {\n        setInput({\n            ...input,\n            countries: [...input.countries, id.target.value]\n        })\n    }\n\n    function handleSeason(e) {\n        setInput({\n            ...input,\n            season: e.target.value\n        })\n    }\n\n    function handleSelctDifficulty(e) {\n        setInput({\n            ...input,\n            difficulty: e.target.value\n        })\n    }\n\n    function handleSelectDuration(e) {\n        setInput({\n            ...input,\n            duration: e.target.value\n        })\n    }\n\n    function handleDelete(e) {\n        setInput({\n            ...input,\n            countries: input.countries.filter(c => c !== e)\n        })\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        dispatch(postActivity(input))\n\n       /*  alert('enviado') */\n        setInput({\n            name: '',\n            difficulty: '',\n            duration: '',\n            season: '',\n            countries: []\n        })\n        alert('creado')\n        history.push('/home')\n     \n    }\n\n    const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n    const difficulty = [1, 2, 3, 4, 5];\n    const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n\n    return (\n        <div >\n            <div >\n                <div>\n                    <h2>Add Activity</h2>\n                    <div>\n                        <form onSubmit={(e)=>handleSubmit(e)}>\n                            <div >\n                                <label>Activity: </label>\n                                <input type=\"text\" value={input.name} name=\"name\" onChange={handleChange} placeholder=\"Activity name...\" required />\n                                {errors.name && (\n                                    <p >{errors.name}</p>\n                                )}\n                            </div>\n                            <div >\n                                <label>Season: </label>\n                                <select onChange={(e)=>handleSeason(e)} required>\n                                    <option value=\"\" hidden>Select season</option>\n                                    {season.map(e => (\n                                        <option value={e} name=\"season\" key={e} >{e}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div >\n                                <label>Difficulty: </label>\n                                <select onChange={(e)=>handleSelctDifficulty(e)} required >\n                                    <option value=\"\" hidden>Choose an option</option>\n                                    {difficulty.map(e => (\n                                        <option value={e} name=\"difficulty\">{e}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div >\n                                <label>Duration: </label>\n                                <select onChange={(e)=>handleSelectDuration(e)} required>\n                                    <option value=\"\" hidden>Choose an option</option>\n                                    {duration.map(e => (\n                                        <option value={e} name=\"duration\">{e}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div >\n                                <label>Country: </label>\n                                <select onChange={(e)=>handleSelect(e)} required>\n                                    <option value=\"\" hidden>Select country</option>\n                                    {countries.map(e => (\n                                        <option value={e.id} name=\"countries\" key={e.id} >{e.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div>\n                                <ul>\n                                    <li >{input.countries.map(i =>\n                                        <div>\n                                            {i}\n                                            <button onClick={() => handleDelete(i)} type=\"button\">X</button>\n                                        </div>)}</li>\n                                </ul>\n                            </div>\n                            <button type=\"submit\">Add Activity</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}}\n\nexport default CreateActivity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAkCC,eAAlC,EAAmDC,WAAnD,EAAgEC,YAAhE,QAAmF,iBAAnF;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;IACrB,IAAIC,MAAM,GAAG,EAAb;;IACA,IAAI,CAACD,KAAK,CAACE,IAAX,EAAiB;MACbD,MAAM,CAACC,IAAP,GAAc,eAAd;IACH;;IACD,OAAOD,MAAP;EACH;;EAED,SAASH,cAAT,GAA0B;IAAA;;IACtB,MAAMK,QAAQ,GA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"},"metadata":{},"sourceType":"module"}