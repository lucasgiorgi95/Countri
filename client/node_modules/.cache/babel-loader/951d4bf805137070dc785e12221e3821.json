{"ast":null,"code":"var _jsxFileName = \"/home/lucasgiorgi/Escritorio/Henry/PI/PI-Countries-main/client/src/Components/CreateActivity.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountry, borrarEstado, cargarActividad, getActivity, postActivity } from '../Redux/action';\nimport { useHistory, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateActivity = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(borrarEstado());\n    dispatch(getCountry());\n  }, []);\n  const actRedux = useSelector(state => state.mensaje);\n  const paises = [{\n    id: 1,\n    name: \"Argentina\",\n    capital: \"Bs.As\",\n    continent: \"Sur America\"\n  }, {\n    id: 2,\n    name: \"Italia\",\n    capital: \"Roma\",\n    continent: \"Europa\"\n  }, {\n    id: 3,\n    name: \"Japon\",\n    capital: \"Tokyo\",\n    continent: \"Aisa\"\n  }];\n  const [error, setError] = useState({\n    nombre: \"\",\n    duracion: \"\",\n    todos: \"\"\n  });\n  const [actividad, setActividad] = useState({\n    nombre: \"\",\n    dificultad: 1,\n    duracion: \"\",\n    temporada: \"\",\n    paises: []\n  });\n  const [lista, setLista] = useState([]);\n\n  function handleChange(e) {\n    let {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"nombre\") {\n      value = value.toUpperCase();\n      !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length < 3 ? setError({ ...error,\n        nombre: \"Solo se permiten letras, mÃ­nimo tres caracteres\"\n      }) : setError({ ...error,\n        nombre: \"\"\n      });\n    }\n\n    if (name === \"duracion\") {\n      !/^[0-9]+$/g.test(value) || value > 100 ? setError({ ...error,\n        duracion: \"Solo se permiten numeros hasta 100\"\n      }) : setError({ ...error,\n        duracion: \"\"\n      });\n    }\n\n    if (e.target.selected) {\n      if (!lista.includes(e.target.text)) {\n        console.log(lista);\n        setLista([...lista, e.target.text]);\n        return setActividad({ ...actividad,\n          paises: [...actividad.paises, value]\n        });\n      }\n    }\n\n    setActividad({ ...actividad,\n      [name]: value\n    });\n\n    if (error.todos !== \"\") {\n      setError({ ...error,\n        todos: \"\"\n      });\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (actividad.nombre === \"\" || actividad.dificultad === \"\" || actividad.duracion === \"\" || actividad.temporada === \"\" || actividad.paises.length === 0 || error.nombre != \"\" || error.duracion != \"\") {\n      console.log(\"no se carga \" + actividad.paises.length);\n      setError({ ...error,\n        todos: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      setError({\n        nombre: \"\",\n        duracion: \"\",\n        todos: \"\"\n      });\n      setActividad({ ...actividad,\n        dificultad: parseInt(actividad.dificultad)\n      });\n      setActividad({ ...actividad,\n        duracion: parseInt(actividad.duracion)\n      });\n      dispatch(cargarActividad(actividad)); //-------------------------------------BORRAR --------------------------------------------\n\n      setActividad({\n        nombre: \"\",\n        dificultad: 1,\n        duracion: \"\",\n        temporada: \"\",\n        paises: []\n      });\n      setLista([]);\n      document.querySelector(\"#formulario\").reset();\n    } // history.push(\"/home\");\n\n\n    return;\n  }\n\n  function borrarPais(e) {\n    setLista(lista.filter(pais => pais !== e.target.value));\n    let result = paises.find(pais => pais.name === e.target.value);\n    setActividad({ ...actividad,\n      paises: actividad.paises.filter(pais => pais !== result.id)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        id: \"formulario\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Load an Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), error.todos !== \"\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nombre\",\n          value: actividad.nombre,\n          placeholder: \"Activity Name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), error.nombre && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dificultad\",\n            children: [\"Difficulty: \", actividad.dificultad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"dificultad\",\n            type: \"range\",\n            min: \"1\",\n            max: \"5\",\n            value: actividad.dificultad,\n            step: \"1\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"duracion\",\n          type: \"text\",\n          value: actividad.duracion,\n          onChange: handleChange,\n          placeholder: \"Duration (days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), error.duracion && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.duracion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Season\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"temporada\",\n              value: \"Verano\",\n              onClick: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), \" \", \"Summer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"temporada\",\n              value: \"Oto\\xF1o\",\n              onClick: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), \" \", \"Autumn\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"temporada\",\n              value: \"Invierno\",\n              onClick: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), \" \", \"Winter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"temporada\",\n              value: \"Primavera\",\n              onClick: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), \" \", \"Spring\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"select\",\n          id: \"paises\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"value\",\n            children: \"Choose a Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pais.id,\n            onClick: handleChange,\n            children: pais.name\n          }, pais.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: lista.map(data => /*#__PURE__*/_jsxDEV(\"button\", {\n            value: data,\n            onClick: borrarPais,\n            children: [data, \" \"]\n          }, data, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"boton\",\n          value: \"Load Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [actRedux && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: actRedux\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Retrun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  }, void 0, false); //   function valida(input) {\n  //     let errors = {}\n  //     if (!input.name) {\n  //         errors.name = \"Name required\"\n  //     }\n  //     return errors;\n  // }\n  // function CreateActivity() {\n  //     const dispatch = useDispatch()\n  //     const history = useHistory()\n  //     const countries = useSelector(state => state.country).sort((a, b) => {\n  //         if(a.name < b.name){\n  //             return -1;\n  //         }\n  //         if(a.name > b.name){\n  //             return 1;\n  //         }\n  //         return 0;\n  //     })\n  //     const [errors, setErrors] = useState({})\n  //     const [input, setInput] = useState({\n  //         name: '',\n  //         difficulty: '',\n  //         duration: '',\n  //         season: '',\n  //         countries: []\n  //     })\n  //     useEffect(() => {\n  //         dispatch(getCountry())\n  //     }, [dispatch])\n  //     useEffect(() => {\n  //         dispatch(getActivity())\n  //     }, [dispatch])\n  //     function handleChange(e) {\n  //         setInput({\n  //             ...input,\n  //             [e.target.name]: e.target.value\n  //         })\n  //         setErrors(valida({\n  //             ...input,\n  //             [e.target.name]: e.target.value\n  //         }))\n  //     }\n  //     function handleSelect(id) {\n  //         setInput({\n  //             ...input,\n  //             countries: [...input.countries, id.target.value]\n  //         })\n  //     }\n  //     function handleSeason(e) {\n  //         setInput({\n  //             ...input,\n  //             season: e.target.value\n  //         })\n  //     }\n  //     function handleSelctDifficulty(e) {\n  //         setInput({\n  //             ...input,\n  //             difficulty: e.target.value\n  //         })\n  //     }\n  //     function handleSelectDuration(e) {\n  //         setInput({\n  //             ...input,\n  //             duration: e.target.value\n  //         })\n  //     }\n  //     function handleDelete(e) {\n  //         setInput({\n  //             ...input,\n  //             countries: input.countries.filter(c => c !== e)\n  //         })\n  //     }\n  //     function handleSubmit(e) {\n  //         e.preventDefault();\n  //         dispatch(postActivity(input))\n  //        /*  alert('enviado') */\n  //         setInput({\n  //             name: '',\n  //             difficulty: '',\n  //             duration: '',\n  //             season: '',\n  //             countries: []\n  //         })\n  //         alert('creado')\n  //         history.push('/home')\n  //     }\n  //     const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n  //     const difficulty = [1, 2, 3, 4, 5];\n  //     const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n  //     return (\n  //         <div >\n  //             <div >\n  //                 <div>\n  //                     <h2>Add Activity</h2>\n  //                     <div>\n  //                         <form onSubmit={(e)=>handleSubmit(e)}>\n  //                             <div >\n  //                                 <label>Activity: </label>\n  //                                 <input type=\"text\" value={input.name} name=\"name\" onChange={handleChange} placeholder=\"Activity name...\" required />\n  //                                 {errors.name && (\n  //                                     <p >{errors.name}</p>\n  //                                 )}\n  //                             </div>\n  //                             <div >\n  //                                 <label>Season: </label>\n  //                                 <select onChange={(e)=>handleSeason(e)} required>\n  //                                     <option value=\"\" hidden>Select season</option>\n  //                                     {season.map(e => (\n  //                                         <option value={e} name=\"season\" key={e} >{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Difficulty: </label>\n  //                                 <select onChange={(e)=>handleSelctDifficulty(e)} required >\n  //                                     <option value=\"\" hidden>Choose an option</option>\n  //                                     {difficulty.map(e => (\n  //                                         <option value={e} name=\"difficulty\">{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Duration: </label>\n  //                                 <select onChange={(e)=>handleSelectDuration(e)} required>\n  //                                     <option value=\"\" hidden>Choose an option</option>\n  //                                     {duration.map(e => (\n  //                                         <option value={e} name=\"duration\">{e}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div >\n  //                                 <label>Country: </label>\n  //                                 <select onChange={(e)=>handleSelect(e)} required>\n  //                                     <option value=\"\" hidden>Select country</option>\n  //                                     {countries.map(e => (\n  //                                         <option value={e.id} name=\"countries\" key={e.id} >{e.name}</option>\n  //                                     ))}\n  //                                 </select>\n  //                             </div>\n  //                             <div>\n  //                                 <ul>\n  //                                     <li >{input.countries.map(i =>\n  //                                         <div>\n  //                                             {i}\n  //                                             <button onClick={() => handleDelete(i)} type=\"button\">X</button>\n  //                                         </div>)}</li>\n  //                                 </ul>\n  //                             </div>\n  //                             <button type=\"submit\">Add Activity</button>\n  //                         </form>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )\n};\n\n_s(CreateActivity, \"Y+ZkeJLoFmiasGvfyaW5dOA1kLk=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = CreateActivity;\nexport default CreateActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateActivity\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getCountry","borrarEstado","cargarActividad","getActivity","postActivity","useHistory","Link","CreateActivity","history","dispatch","actRedux","state","mensaje","paises","id","name","capital","continent","error","setError","nombre","duracion","todos","actividad","setActividad","dificultad","temporada","lista","setLista","handleChange","e","value","target","toUpperCase","test","length","selected","includes","text","console","log","handleSubmit","preventDefault","parseInt","document","querySelector","reset","borrarPais","filter","pais","result","find","map","data"],"sources":["/home/lucasgiorgi/Escritorio/Henry/PI/PI-Countries-main/client/src/Components/CreateActivity.jsx"],"sourcesContent":["import React, {useState, useEffect}from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { getCountry, borrarEstado,cargarActividad, getActivity, postActivity} from '../Redux/action'\nimport {useHistory, Link} from 'react-router-dom'\n\nconst CreateActivity = () => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  React.useEffect( () => {\n    dispatch(borrarEstado());\n     dispatch(getCountry());\n  }, []);\n  const actRedux = useSelector((state) => state.mensaje);\n  const paises = [{\n    id:1,\n    name:\"Argentina\",\n    capital:\"Bs.As\",\n    continent:\"Sur America\"\n  },\n  {\n    id:2,\n    name:\"Italia\",\n    capital:\"Roma\",\n    continent:\"Europa\"\n  },\n  {\n    id:3,\n    name:\"Japon\",\n    capital:\"Tokyo\",\n    continent:\"Aisa\"\n  }]\n  const [error, setError] = useState({nombre: \"\",duracion: \"\",todos:\"\"});\n  const [actividad, setActividad] = useState({\n    nombre: \"\",\n    dificultad: 1,\n    duracion: \"\",\n    temporada: \"\",\n    paises: [],\n  });\n  const [lista, setLista] = useState([]);\n  \n\n  function handleChange(e) {\n\n    let { name, value} = e.target;\n    if (name === \"nombre\") {\n      value = value.toUpperCase();\n      !/^[A-Za-z\\u00f1\\u00d1\\s]+$/g.test(value) || value.length <3 ?\n        setError({ ...error, nombre:\"Solo se permiten letras, mÃ­nimo tres caracteres\" }):\n        setError({ ...error, nombre: \"\" });\n    }\n     if(name === \"duracion\") {\n      !/^[0-9]+$/g.test(value) || value >100 ?\n        setError({ ...error, duracion:\"Solo se permiten numeros hasta 100\" }):\n        setError({ ...error, duracion: \"\" });   \n    }\n     if (e.target.selected) {\n       \n      if (!lista.includes(e.target.text)) {\n        console.log(lista);\n        setLista([...lista, e.target.text]);\n       return setActividad({ ...actividad, paises: [...actividad.paises,value] });\n      }   \n    }\n    setActividad({ ...actividad, [name]: value });\n   if(error.todos !== \"\"){\n    setError({...error,todos:\"\"})\n   }\n  }\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n  \n    if (\n      actividad.nombre === \"\" ||\n      actividad.dificultad === \"\" ||\n      actividad.duracion === \"\" ||\n      actividad.temporada === \"\" ||\n      actividad.paises.length === 0 ||\n      error.nombre != \"\" ||\n      error.duracion !=\"\"\n    ) {\n      console.log(\"no se carga \"+ actividad.paises.length);\n   setError({...error, todos:\"Todos los campos son obligatorios\"});\n  \n\n    } else {\n      setError({ nombre: \"\", duracion: \"\",todos: \"\"});\n      setActividad({...actividad, dificultad:  parseInt(actividad.dificultad)}) \n      setActividad({...actividad, duracion: parseInt(actividad.duracion)});\n      dispatch(cargarActividad(actividad));\n      //-------------------------------------BORRAR --------------------------------------------\n      setActividad({nombre: \"\",dificultad: 1,duracion: \"\",temporada: \"\",paises: []});\n      setLista([]); \n      document.querySelector(\"#formulario\").reset();\n    } \n    // history.push(\"/home\");\n    return\n  }\n\n  function borrarPais(e) {\n     setLista(lista.filter((pais) => pais !== e.target.value));\n      let result = paises.find((pais) => pais.name === e.target.value);\n      setActividad({ ...actividad, paises: actividad.paises.filter((pais) => pais !== result.id) });\n  }\n\n  return (\n    <>\n    <div >\n      <form  onSubmit={handleSubmit} id=\"formulario\">\n\n        <h1 >Load an Activity</h1>\n        {error.todos !==\"\" && <span >{error.todos}</span>}\n      \n        <input   type=\"text\" name=\"nombre\"  value={actividad.nombre}\n          placeholder=\"Activity Name\" onChange={handleChange}/>\n        \n        {error.nombre && <span >{error.nombre}</span>}\n        <div >\n          <label htmlFor=\"dificultad\">Difficulty: {actividad.dificultad}</label>\n          <input name=\"dificultad\"  type=\"range\" min=\"1\"\n            max=\"5\" value={actividad.dificultad} step=\"1\" onChange={handleChange} />\n        </div>\n        \n          <input  name=\"duracion\" type=\"text\" value={actividad.duracion} onChange={handleChange} \n          placeholder =\"Duration (days)\"/>\n      \n        {error.duracion && <span >{error.duracion}</span>}\n        <div >\n          <label htmlFor=\"\">Season</label>\n          <label htmlFor=\"\">\n            <input type=\"radio\" name=\"temporada\" value=\"Verano\" onClick={handleChange}/>{\" \"}\n            Summer\n          </label>\n          <label htmlFor=\"\">\n            <input type=\"radio\" name=\"temporada\" value=\"OtoÃ±o\" onClick={handleChange}/>{\" \"}\n            Autumn\n          </label>\n          <label htmlFor=\"\">\n            <input type=\"radio\" name=\"temporada\" value=\"Invierno\" onClick={handleChange}/>{\" \"}\n            Winter\n          </label>\n          <label htmlFor=\"\">\n            <input type=\"radio\" name=\"temporada\" value=\"Primavera\" onClick={handleChange}/>{\" \"}\n            Spring\n          </label>\n        </div>\n      \n          <select name=\"select\" id=\"paises\"  >\n            <option value=\"value\">Choose a Country</option>\n            {paises.map((pais) => (\n              <option key={pais.id} value={pais.id} onClick={handleChange}>\n                {pais.name}\n              </option>\n            ))}\n          </select>\n         \n        <div>\n          {lista.map((data) => (\n            <button   key={data} value={data}  onClick={borrarPais}>{data} </button>\n          ))}\n        </div>\n          <input  type=\"submit\" name={\"boton\"} value=\"Load Activity\" />\n      </form>\n      \n      <div >\n      {actRedux && <span >{actRedux}</span>}\n        <Link to=\"/home\" > <button  >Retrun</button></Link>\n      </div>\n    </div>\n    </>\n  );\n\n\n//   function valida(input) {\n//     let errors = {}\n//     if (!input.name) {\n//         errors.name = \"Name required\"\n//     }\n//     return errors;\n// }\n\n// function CreateActivity() {\n//     const dispatch = useDispatch()\n//     const history = useHistory()\n//     const countries = useSelector(state => state.country).sort((a, b) => {\n//         if(a.name < b.name){\n//             return -1;\n//         }\n//         if(a.name > b.name){\n//             return 1;\n//         }\n//         return 0;\n//     })\n\n//     const [errors, setErrors] = useState({})\n\n//     const [input, setInput] = useState({\n//         name: '',\n//         difficulty: '',\n//         duration: '',\n//         season: '',\n//         countries: []\n//     })\n\n//     useEffect(() => {\n//         dispatch(getCountry())\n//     }, [dispatch])\n\n//     useEffect(() => {\n//         dispatch(getActivity())\n//     }, [dispatch])\n\n//     function handleChange(e) {\n//         setInput({\n//             ...input,\n//             [e.target.name]: e.target.value\n//         })\n//         setErrors(valida({\n//             ...input,\n//             [e.target.name]: e.target.value\n//         }))\n//     }\n\n//     function handleSelect(id) {\n//         setInput({\n//             ...input,\n//             countries: [...input.countries, id.target.value]\n//         })\n//     }\n\n//     function handleSeason(e) {\n//         setInput({\n//             ...input,\n//             season: e.target.value\n//         })\n//     }\n\n//     function handleSelctDifficulty(e) {\n//         setInput({\n//             ...input,\n//             difficulty: e.target.value\n//         })\n//     }\n\n//     function handleSelectDuration(e) {\n//         setInput({\n//             ...input,\n//             duration: e.target.value\n//         })\n//     }\n\n//     function handleDelete(e) {\n//         setInput({\n//             ...input,\n//             countries: input.countries.filter(c => c !== e)\n//         })\n//     }\n\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         dispatch(postActivity(input))\n\n//        /*  alert('enviado') */\n//         setInput({\n//             name: '',\n//             difficulty: '',\n//             duration: '',\n//             season: '',\n//             countries: []\n//         })\n//         alert('creado')\n//         history.push('/home')\n     \n//     }\n\n//     const season = ['Winter', 'Spring', 'Autumn', 'Summer'];\n//     const difficulty = [1, 2, 3, 4, 5];\n//     const duration = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n\n//     return (\n//         <div >\n//             <div >\n//                 <div>\n//                     <h2>Add Activity</h2>\n//                     <div>\n//                         <form onSubmit={(e)=>handleSubmit(e)}>\n//                             <div >\n//                                 <label>Activity: </label>\n//                                 <input type=\"text\" value={input.name} name=\"name\" onChange={handleChange} placeholder=\"Activity name...\" required />\n//                                 {errors.name && (\n//                                     <p >{errors.name}</p>\n//                                 )}\n//                             </div>\n//                             <div >\n//                                 <label>Season: </label>\n//                                 <select onChange={(e)=>handleSeason(e)} required>\n//                                     <option value=\"\" hidden>Select season</option>\n//                                     {season.map(e => (\n//                                         <option value={e} name=\"season\" key={e} >{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Difficulty: </label>\n//                                 <select onChange={(e)=>handleSelctDifficulty(e)} required >\n//                                     <option value=\"\" hidden>Choose an option</option>\n//                                     {difficulty.map(e => (\n//                                         <option value={e} name=\"difficulty\">{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Duration: </label>\n//                                 <select onChange={(e)=>handleSelectDuration(e)} required>\n//                                     <option value=\"\" hidden>Choose an option</option>\n//                                     {duration.map(e => (\n//                                         <option value={e} name=\"duration\">{e}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div >\n//                                 <label>Country: </label>\n//                                 <select onChange={(e)=>handleSelect(e)} required>\n//                                     <option value=\"\" hidden>Select country</option>\n//                                     {countries.map(e => (\n//                                         <option value={e.id} name=\"countries\" key={e.id} >{e.name}</option>\n//                                     ))}\n//                                 </select>\n//                             </div>\n//                             <div>\n//                                 <ul>\n//                                     <li >{input.countries.map(i =>\n//                                         <div>\n//                                             {i}\n//                                             <button onClick={() => handleDelete(i)} type=\"button\">X</button>\n//                                         </div>)}</li>\n//                                 </ul>\n//                             </div>\n//                             <button type=\"submit\">Add Activity</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n}\n\nexport default CreateActivity"],"mappings":"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"},"metadata":{},"sourceType":"module"}